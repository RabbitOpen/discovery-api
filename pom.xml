<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>rabbit.discovery.api</groupId>
    <artifactId>discovery-api</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>discovery-common</module>
        <module>discovery-config</module>
        <module>discovery-plugins</module>
        <module>discovery-rest</module>
        <module>discovery-starter</module>
        <module>discovery-test-cases</module>
    </modules>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <spring-boot.version>2.7.2</spring-boot.version>
        <spring-cloud.version>2021.0.6</spring-cloud.version>
        <spring.version>5.3.22</spring.version>

        <!--   是否执行shading操作，sonar扫描时忽略一切shading     -->
        <shading.skip>true</shading.skip>
        <sonar.scan.skip>false</sonar.scan.skip>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!--将所有jacoco定位到同样的父目录位置-->
        <sonar.jacoco.reportPaths>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPaths>
        <byte.buddy.version>1.11.0</byte.buddy.version>
        <rabbit.flt.core.version>1.0.0-SNAPSHOT</rabbit.flt.core.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte.buddy.version}</version>
            </dependency>

            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>${byte.buddy.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>discovery-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>discovery-config</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>discovery-rest</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>discovery-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>plugins-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>plugins-client</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.discovery.api</groupId>
                <artifactId>plugins-server</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.flt</groupId>
                <artifactId>flt-core</artifactId>
                <version>${rabbit.flt.core.version}</version>
            </dependency>

            <dependency>
                <groupId>rabbit.flt</groupId>
                <artifactId>flt-common</artifactId>
                <version>${rabbit.flt.core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                <version>2.2.1.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>apache-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.10</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.11</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.30</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <sonar.host.url>http://localhost:9000</sonar.host.url>
                <sonar.projectName>${project.artifactId}</sonar.projectName>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <!--          字节增强          -->
                    <execution>
                        <id>agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report-aggregate</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--使用前面定义的位置-->
                    <destFile>${sonar.jacoco.reportPaths}</destFile>
                    <!--重要！用追加的模式-->
                    <append>true</append>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>